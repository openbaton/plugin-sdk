/*
 * Copyright (c) 2015-2018 Open Baton (http://openbaton.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it.name == 'uploadArchives' }) {
        java.io.Console console = System.console()
        console.printf "\n\nWe have to sign some things in this build." +
                "\n\nPlease enter your signing details.\n\n"
        def id
        def file
        def password
        if (!project.hasProperty('pgpKeyId')) {
            id = console.readLine("PGP Key Id: ")
        } else {
            id = pgpKeyId
            console.printf "\nfound id in properties: " + id
        }
        if (!project.hasProperty('secringFilePath')) {
            file = console.readLine("PGP Secret Key Ring File (absolute path): ")
        } else {
            file = secringFilePath
            console.printf "\nfound pathfile in properties: " + file
        }
        if (!project.hasProperty('pgpPassword')) {
            password = console.readPassword("PGP Private Key Password: ")
        } else {
            password = pgpPassword
            console.printf "\nfound password in properties: *******"
        }
        allprojects { ext."signing.keyId" = id }
        allprojects { ext."signing.secretKeyRingFile" = file }
        allprojects { ext."signing.password" = password }


        console.printf "\nThanks.\n\n"
    }
}

allprojects {
    apply plugin: 'com.bmuschko.nexus'

    modifyPom {
        project {
            name 'Open Baton Plugin SDK'
            description 'Openbaton libraries for integrating with the NFV Orchestrator SBI'
            url 'http://openbaton.github.io'
            inceptionYear '2015'
            scm {
          	connection 'scm:git:git@github.com:openbaton/plugin-sdk.git'
          	developerConnection 'scm:git:git@github.com:openbaton/plugin-sdk.git'
          	url 'https://github.com/openbaton/plugin-sdk'
            }

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repositories'
                }
            }

            developers {
                developer {
                    id 'lto'
                    name 'Lorenzo Tomasini'
                    email 'lorenzo.tomasini@fokus.fraunhofer.de'
                }
                developer {
                    id 'gca'
                    name 'Giuseppe Carella'
                    email 'giuseppe.carella@fokus.fraunhofer.de'
                }
            }
        }
    }

    extraArchive {
        sources = true
        tests = false
        javadoc = true
    }

    nexus {
        sign = true
        repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}
