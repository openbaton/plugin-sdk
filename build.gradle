/*
 * Copyright (c) 2015 Fraunhofer FOKUS
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id 'net.researchgate.release' version '2.6.0'
    id "com.github.sherter.google-java-format" version "0.5"
}

apply from: 'gradle/gradle/nexus.upload.plugin.gradle'

apply plugin: 'com.bmuschko.nexus'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

/**
 * Project settings
 */
project.ext {
    /**
     * Application Related Version
     */
    applicationVersion = version
    applicationVersionDebian = "1";
    openbatonVersion = "5.2.0"
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.openbaton:vim-drivers:' + openbatonVersion
    compile 'org.openbaton:monitoring:' + openbatonVersion
    compile 'org.openbaton:exception:' + openbatonVersion
    compile 'org.openbaton:registration:' + openbatonVersion

    compile 'com.google.code.gson:gson:2.5'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'com.rabbitmq:amqp-client:3.5.6'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    // for snapshots
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/releases/'
    }
}

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = 'Pre-tag commit: '
    tagCommitMessage = 'Creating tag: '
    newVersionCommitMessage = 'New version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    git {
        requireBranch = ''
    }
}


compileJava.dependsOn tasks.googleJavaFormat
